@model WebOneApp.Models.Reservation

@{
    ViewBag.Title = "EditReservation";
}

<h2>Update Reservation</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Spots left: </h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.branchId)


    <div class="form-group">
        @Html.LabelFor(model => model.name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.quantity, "Quantity", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dateReservedAt, "Date", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.dateReservedAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.timeReservedAt, "Time", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.timeReservedAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.phoneNumber, "Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.status, "Status", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.comment, "Comment", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.comment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
